import java.util.Arrays;

public class MaxMinSumDifference {
    public static void main(String[] args) {

        int[][] testCases = {
                {14, 16, 87, 36, 25, 89, 34},
                {16, 16, 16, 16, 16},
                {0, 0, 0, 0},
                {-12, -78, -35, -42, -85},
                {15, 19, 34, 56, 12},
                {85, 45, 65, 75, 95}
        };
        int[] mValues = {1, 0, 1, 3, 6, 5};
        int[] nValues = {3, 1, 2, 3, 3, 7};

        for (int i = 0; i < testCases.length; i++) {
            int[] array = testCases[i];
            int m = mValues[i];
            int n = nValues[i];


            int mthMax = findMthMaximum(array, m);
            int nthMin = findNthMinimum(array, n);


            int sum = mthMax + nthMin;
            int difference = Math.abs(mthMax - nthMin);

            System.out.println("Array: " + Arrays.toString(array));
            System.out.println(m + "th Maximum Number = " + mthMax);
            System.out.println(n + "th Minimum Number = " + nthMin);
            System.out.println("Sum = " + sum);
            System.out.println("Difference = " + difference);
            System.out.println("--------------");
        }
    }

    private static int findMthMaximum(int[] array, int m) {
        Arrays.sort(array);
        int uniqueCount = 1;
        int prev = array[array.length - 1];

        for (int i = array.length - 2; i >= 0; i--) {
            if (array[i] != prev) {
                uniqueCount++;
                if (uniqueCount == m) {
                    return array[i];
                }
                prev = array[i];
            }
        }

        return -1; 
    }

    private static int findNthMinimum(int[] array, int n) {
        Arrays.sort(array);
        int uniqueCount = 1;
        int prev = array[0];

        for (int i = 1; i < array.length; i++) {
            if (array[i] != prev) {
                uniqueCount++;
                if (uniqueCount == n) {
                    return array[i];
                }
                prev = array[i];
            }
        }

        return -1; 
    }
}
